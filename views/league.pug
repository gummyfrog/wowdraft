extends layout

block content

	div#league

		meta(property="og:title" :content="league.name")
		meta(property="og:image" :content="'/images/league_icons/' + league.icon")

		div#content

			draft_info(
				v-bind:league_info="league_info",
				v-bind:status_slug="statusSlug"
			)
			
			draft_progress(
				v-bind:draft_info="draft_info",
				v-bind:teams="teams",
				v-bind:league_info="league_info"
				v-bind:yti="yourTeamIndex"
				v-bind:reqs="requirements"
			)

			div.title-bar
				h2.
					<i class="fas fa-flag"></i>
					Registered Teams

			div.teams_wrapper
				h3(v-if="noTeams") ...none... yet!

				ol#teams
					team-item(
						v-for="(team, index) in teams"
						v-bind:team="team"
						v-bind:index="index",
					)


	script.
		var league = !{JSON.stringify(league)}
		league = JSON.parse(league)

		Vue.component('team-item', {
			props: ['team', 'index'],
		 	template: `

		 	<div class="team">

			 	<div class="team_head">
		 			<img class="team_logo" :src="'/images/icons/'+team.icon+'.png'">
				 	<h1 class="team_name" :style="'color:'+team.color2"> {{team.name}} </h1> 
				</div>

				<div class="team_misc">
				 	<h3 class="team_manager"> {{team.manager}} </h3>
				 	<h2 class="team_motto" :style="'color:'+team.color2"> {{team.motto}} </h2> 
			 	</div>

			 	<div class="team_players">
				 	<mini_player 
						v-for="(player, index) in team.drafted_players"
						v-bind:player="player"
						v-bind:index="index">
				</div>
		 	</div>

		 	`
		})

		Vue.component('draft_info', {
			props: ['league_info', 'status_slug'],
		 	template: `
		 	<div> 
		 		<div class="league_wrapper" :style="'color:'+league.color1"> 
		 		<img class="league_logo" :src="'/images/league_icons/' + league.icon">
		 		<h1 class="league_name"> 
		 			{{league_info.name}} 
		 		</h1> 
		 	</div>

		 	<div class="league_links_wrapper">
		 		<ol class="league_links">
		 			<a :href="'/leagues/' + league_info.code"> <i class="fas fa-home"></i> League Home </a>
		 			<a :href="'/leagues/' + league_info.code + '/teams'"> <i class="fas fa-flag"></i> Teams </a>
		 			<a :href="'/leagues/' + league_info.code + '/rankings'"> <i class="fas fa-calendar-alt"></i> Rankings </a>
		 		</ol>
		 	</div>

		 	<div class="league_body">

			 		<h2 class="flavor">
					 	"{{league_info.description}}"
				 	</h2> 

			 		<p :class="'league_status '+status_slug">Draft 
				 		{{league_info.status}} 
			 		</p>

				 	<p class="organizedby">
				 	Organizer: {{league_info.admin.name}}
				 	</p>

				 	<div class="league_information">

					 	<p class="style" 
					 	Draft Style: {{league_info.style}}
					 	</p> 

					 	<p class="reportday"> 
					 	Report Day: {{league_info.report_day || "Monday"}} 
					 	</p>

					 	<p class="startday"> 
					 	Draft Will Start: "{{league_info.start_date || "didn't say!"}}"
					 	</p>

						
						<br>

					 	<p class="rounds">{{league_info.rounds}} Picks per Team
					 	</p>

					 	<p class="factioninfo">
					 	{{league_info.server}}, {{league_info.faction}} 
					 	</p> 


					</div>
			 	<a class="startbutton" v-if="!{organizer} && league.status == 'Setting Up' && league.teams.length >=2" :href="'/leagues/' + league_info.code + '/start'"> 
			 		<br>
			 		<h2>
			 		 <i class="fas fa-hand-point-right "></i> Ready to go? Start Drafting!
			 		</h2>
			 	</a>

		 	</div>

		 	<div v-if="!{canMakeTeam}" class="create_team_box">
			 	<a :href="'/leagues/' + league_info.code + '/newTeam'"> 
			 		<h2> 
			 			<i class="fas fa-long-arrow-alt-right"></i> Register Your Team!
		 			</h2> 
				</a>
			</div>

		 	`
		})

		Vue.component('draft_progress', {
			props: ['draft_info', 'teams', 'league_info', 'yti', 'reqs'],
		 	template: `
		 	<div v-if="draft_info.status==1" class="draft"> 

		 			<div class="title-bar">
			 			<h2> <i class="fas fa-clock"></i> On The Clock: <br> {{teams[draft_info.pick_order[draft_info.pick_index]].manager}} ({{teams[draft_info.pick_order[draft_info.pick_index]].name}})</h2>
				 		<div v-if="!{organizer}" class="SKIP">
				 			<h3> ADMIN: Skip this team's turn? </skip>
				 			<a class="skipbutton" v-if="!{organizer}" :href="'/leagues/' + league_info.code + '/skip'"> Yep, skip! </a>
				 		</div>
			 		</div>

		 		<div v-if="draft_info.status==1" class="progress">



			 		<div class="youreup" v-if="draft_info.pick_order[draft_info.pick_index] == yti"> 
			 		    <audio id="audio" src="/sounds/levelup2.ogg" autoplay="true"> </audio>

			 			<h2> <i class="fas fa-user-clock"></i> You're Up! </h2>
			 			<ul class="requirements" v-html="reqs"> </ul>
			 		</div>

			 		<a class="view_players view_players_button" :href="'/leagues/' + league_info.code+'/proplayers'"> <i class="fas fa-long-arrow-alt-right"></i> View Players </a>
		 		</div>
		 		<h1 v-else>Draft is over! Great job!</h1>


				<div class="title-bar">
		 			<h2><i class="fas fa-history"></i> Pick History: </h2>
		 		</div>

		 		<div v-if="draft_info.status!=0" class="pick_history">
		 			<div class="picks">
						<pick_history_item 
							v-for="(pick, index) in draft_info.picks"
							v-bind:pick="pick"
							v-bind:index="index">
					</div>
		 		</div>

		 		<div v-if="draft_info.status!=0">
		 			<div class="title-bar">
		 				 <h2><i class="fas fa-list-ul"></i> Pick Order: </h2>
		 			</div>

		 			<div class="pick_order">

					<pick_order_item 
						v-for="(team_number, index) in draft_info.pick_order"
						v-bind:team_number="team_number"
						v-bind:teams="teams"
						v-bind:index="index"
						v-bind:pick_index=draft_info.pick_index
						v-bind:picks=draft_info.picks
						v-bind:current="draft_info.pick_index">
					</div>
		 		</div>
		 	</div>
		 	`
		})

		Vue.component('pick_history_item', {
			props: ['pick', 'index'],
		 	template: `
		 	<div class="pick">
		 		<h1 class="pick_number"> {{index+1}} </h1>
			 	<h4 class="mini_team_name" :style="'color:'+pick.team.color2"> {{pick.team.name}} </h4> 
			 	<br>

			 	<img class="mini_role" :src="'/images/roles/'+pick.player.role+'.png'">
		 		<img class="mini_class" :src="'/images/classes/'+pick.player.class+'.png'">

			 	<h4 :class="'mini_player '+pick.player.class">{{pick.player.name}}</h4>
		 	</div>`
		})


		Vue.component('pick_order_item', {
			props: ['current', 'team_number', 'index', 'pick_index', 'teams', 'picks'],
		 	template: `
		 	<div class="pick_order_item current_pick" v-if="current==index">
		 		<h3 class="pick_order_number"> {{index+1}} </h3>
		 		<h4> {{teams[team_number].name}} </h4>
		 	</div>
		 	<div v-else-if="pick_index > index" class="pick_order_item past_order">
		 		<h3 class="pick_order_number"> {{index+1}} </h3>
		 		<h4> {{teams[team_number].name}} </h4>
		 	</div>
		 	<div v-else class="pick_order_item">
		 		<h3 class="pick_order_number"> {{index+1}} </h3>
		 		<h4> {{teams[team_number].name}} </h4>
		 	</div>
		 	`
		})

		Vue.component('mini_player', {
			props: ['player'],
		 	template: `
		 	<div class="team_mini_player">
		 	<img class="mini_role" :src="'/images/roles/'+player.role+'.png'">
		 	<img class="mini_class" :src="'/images/classes/'+player.class+'.png'">

			<span :class="'mini_player '+player.class">{{player.name}}</span>
			<span class="mini_guild">{{player.guild}}</span>
			</div>`
		})


		var app = new Vue({
		  el: '#league',
		  data: {
		  	teams: league.teams,
		  	league_info: league,
		  	has_real_draft_info: false,
		  	draft_info: {pick_order:[0], pick_index:0, started: false, inProgress:false},
		  },
		  methods: {
			fetchDraftData: function(event) {
				fetch(`/api/leagues/${league.code}/draftInfo`)
				.then(res => res.json())
				.then((response) => {
					app.draft_info = response
					app.has_real_draft_info = true;
				})
			},
			fetchData:function(event) {
				fetch(`/api/leagues/${league.code}`)
				.then(res => res.json())
				.then((response) => {
					league = response;
					this.teams = league.teams;
					this.league_info = league;
				})
			}
		  },
		  computed: {
		  	statusSlug() {
		  		return this.league_info.status.toLowerCase().replace(" ", '-');
		  	},
		  	noTeams() {
		  		return this.teams.length == 0;
		  	},
		  	yourTeamIndex() {
		  		for(var x=0; x<this.teams.length;x++) {
		  			if(this.teams[x].manager == `!{user_session_name}`) {
		  				return x
			  		}
		  		}
		  		return -1;
		  	},
		  	requirements() {
		  		if(this.yourTeamIndex != -1) {
			  		var roles_drafted = this.teams[this.yourTeamIndex].roles_drafted;
			  		var reqs = this.league_info.requirements;
			  		var msg = "";

			  		console.log(roles_drafted);
			  		console.log(reqs);

			  		if(roles_drafted.tanks < reqs.tanks) {
			  			msg += `<li> <i class="fas fa-exclamation-circle"></i> You need ${reqs.tanks-roles_drafted.tanks} more tank(s). </li>`
			  		}
			  		if(roles_drafted.dps < reqs.dps) {
			  			msg += `<li> <i class="fas fa-exclamation-circle"></i> You need ${reqs.dps-roles_drafted.dps} more dps.</li>`
			  		}
			  		if(roles_drafted.healers < reqs.healers) {
			  			msg += `<li> <i class="fas fa-exclamation-circle"></i> You need ${reqs.healers-roles_drafted.healers} more healer(s).</li>`
			  		}
			  		return msg;
		  		}
		  	}
		  }
		})

		app.fetchDraftData();
		if(league.status == "In Progress") {
			setInterval(app.fetchDraftData, 1000 * 5)
		}

		if(league.status != "Completed") {
			setInterval(app.fetchData, 1000 * 10)
		}